

// exports.approveOrder = async (req, res) => {
//     const { id } = req.params;
    
//     try {
//         // Find the order by ID
//         const order = await Order.findById(id);
//         if (!order) {
//             return res.status(404).json({ error: 'Order not found' });
//         }

//         // Validate if required fields are present
//         if (!order.customer || !order.customer.email || !order.plan) {
//             return res.status(400).json({ error: 'Order is missing required customer or plan details' });
//         }

//         // Check if the account already exists
//         let account = await Account.findOne({ customerEmail: order.customer.email });

//         // If no account exists, create one
//         if (!account) {
//             const generatedPassword = generateRandomPassword();
//             account = new Account({
//                 displayName: `${order.customer.first_name} ${order.customer.last_name}`,
//                 customerEmail: order.customer.email,
//                 companyEmail: order.customer.email,
//                 plan: order.plan,
//                 leverage: 0.0,
//                 tradeSystem: 'MT4',  
//                 accountUser: order.customer.email,
//                 accountPassword: bcrypt.hashSync(generatedPassword, 10),
//                 type: 'Phase1',  
//                 dailyDrawdown: 0.0,  
//                 totalDrawdown: 0.0,  
//                 totalTarget: 0.0,  
//                 profitShare: 0.0,  
//                 breached: false,  
//                 breachedReason: 'None',  
//                 dayStartEquity: 0.0,  
//                 phaseInitialBalance: 0.0  
//             });

//             await account.save();

//             // Send an email to the customer with their new account details
//             // await sendEmail("AccountCreation", order.customer.email, {
//             //     name: account.displayName,
//             //     email: account.customerEmail,
//             //     password: generatedPassword,
//             // });
//         }

//         // Update the order status to "Completed"
//         order.status = 'Completed';
//         order.account = account._id;
//         await order.save();

//         res.status(200).json({ message: 'Order approved successfully', order });
//     } catch (error) {
//         console.error('Error approving order:', error);
//         res.status(500).json({ error: 'Internal server error' });
//     }
// };
